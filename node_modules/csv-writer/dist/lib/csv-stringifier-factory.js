"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const array_1 = require("./csv-stringifiers/array");
const field_stringifier_1 = require("./field-stringifier");
const object_1 = require("./csv-stringifiers/object");
const DEFAULT_FIELD_DELIMITER = ',';
const VALID_FIELD_DELIMITERS = [DEFAULT_FIELD_DELIMITER, ';'];
class CsvStringifierFactory {
    createArrayCsvStringifier(params) {
        const fieldDelimiter = params.fieldDelimiter || DEFAULT_FIELD_DELIMITER;
        _validateFieldDelimiter(fieldDelimiter);
        const fieldStringifier = new field_stringifier_1.FieldStringifier(fieldDelimiter);
        return new array_1.ArrayCsvStringifier(fieldStringifier, fieldDelimiter, params.header);
    }
    createObjectCsvStringifier(params) {
        const fieldDelimiter = params.fieldDelimiter || DEFAULT_FIELD_DELIMITER;
        _validateFieldDelimiter(fieldDelimiter);
        const fieldStringifier = new field_stringifier_1.FieldStringifier(fieldDelimiter);
        return new object_1.ObjectCsvStringifier(fieldStringifier, fieldDelimiter, params.header);
    }
}
exports.CsvStringifierFactory = CsvStringifierFactory;
function _validateFieldDelimiter(delimiter) {
    if (VALID_FIELD_DELIMITERS.indexOf(delimiter) === -1) {
        throw new Error(`Invalid field delimiter \`${delimiter}\` is specified`);
    }
}
//# sourceMappingURL=csv-stringifier-factory.js.map